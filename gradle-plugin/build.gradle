plugins {
    id 'java-gradle-plugin'
}

dependencies {
    implementation project(':lib')
    implementation 'io.swagger.parser.v3:swagger-parser:2.0.27'
    implementation 'org.openapitools.empoa:empoa-swagger-core:2.0.0'
    testImplementation 'junit:junit:4.13.2'
}

gradlePlugin {
    plugins {
        openAPIStyleValidator {
            id = 'org.openapitools.openapistylevalidator'
            implementationClass = 'org.openapitools.openapistylevalidator.gradle.OpenAPIStyleValidatorGradlePlugin'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    dependsOn(tasks.functionalTest)
}

publishing {
    // afterEvaluate is necessary because java-gradle-plugin
    // creates its publications in an afterEvaluate callback
    afterEvaluate {
        publications {
            withType(MavenPublication) {
                // customize all publications here
                pom {
                    url = 'https://openapitools.github.io/openapi-style-validator/'
                    inceptionYear = "2019"
                    licenses {
                        license {
                            name = 'Apache 2.0 License'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    developers {
                        developer {
                            id = 'JFCote'
                            name = 'Jean-Francois Cote'
                            email = 'jcote@stingray.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                        developerConnection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                        url = 'https://github.com/openapitools/openapi-style-validator/'
                    }
                }
            }
            pluginMaven {
                artifactId = 'openapi-style-validator-gradle-plugin'
                // customize main publications here
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'OpenAPI Style Validator - gradle plugin'
                    description = 'Gradle plugin to validate the style and standards of an OpenAPI specification'
                }
            }
            openAPIStyleValidatorPluginMarkerMaven {
                // customize marker publications here
                pom {
                    name = 'OpenAPI Style Validator - gradle plugin marker artifact'
                    description = 'Marker artifact for the OpenAPI Style Validator gradle plugin'
                }
            }
        }
    }
}