plugins {
    id "com.diffplug.spotless" version "6.11.0"
}

apply plugin: 'application'

dependencies {
    implementation project(':openapi-style-validator-lib')
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.slf4j:slf4j-jdk14:2.0.5'
    implementation 'io.swagger.parser.v3:swagger-parser:2.0.33'
    implementation 'org.openapitools.empoa:empoa-swagger-core:2.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'

    testImplementation "org.mockito:mockito-core:4.9.0"
}

mainClassName = 'org.openapitools.openapistylevalidator.cli.Main'

apply plugin: 'com.github.johnrengelman.shadow'

def generatedVersionDir = "${buildDir}/generated-version"

sourceSets {
    main {
        output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        def propertiesFile = file "$generatedVersionDir/version.properties"
        propertiesFile.parentFile.mkdirs()
        def properties = new Properties()
        properties.setProperty("version", rootProject.version.toString())
        propertiesFile.withWriter { properties.store(it, null) }
    }
}
processResources.dependsOn generateVersionProperties

shadowJar {
	//noinspection GroovyAccessibility
    archiveBaseName = "openapi-style-validator-cli"
	//noinspection GroovyAccessibility
	archiveClassifier = 'all'
}

project.tasks.assemble.dependsOn project.tasks.shadowJar

java {
    withJavadocJar()
    withSourcesJar()
}

spotless {
    java {
        removeUnusedImports()
        trimTrailingWhitespace()
        palantirJavaFormat()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'openapi-style-validator-cli'
            pom {
                name = 'OpenAPI Style Validator - cli'
                description = 'Command line interface to validate the style and standards of an OpenAPI specification'
                packaging = 'jar'
                url = 'https://openapitools.github.io/openapi-style-validator/'
                inceptionYear = "2019"
                licenses {
                    license {
                        name = 'Apache 2.0 License'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'JFCote'
                        name = 'Jean-Francois Cote'
                        email = 'jcote@stingray.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                    developerConnection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                    url = 'https://github.com/openapitools/openapi-style-validator/'
                }
            }
            from components.java
        }
    }
}
